Plans For Java Programming - Jaylen Hill

Tuesday -
Look At Video Again(Take Notes of What Is Being Said; Dissect Every Line)
Figure Out How To Generate Multiple Balls As You Want

Needed:
(we can cross things out as we go)
alt-shift-5
Game Building:

Wednesday: Invert brick game

Generate a set number of balls that fall down..Generate pegs and add collisions to pegs. Add rectangles with values at the bottom “Buckets”

Set values to the ball                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 . Set multipliers to buckets and make a score

Use Ascii file reader to spawn a ball every time it reads a word

Use ascii file reader to give a value to each ball it spawns. The value given to a ball corresponds to its ascii value

Make a program that asks for a password. Each character in the password string will turn into an ascii value. Each ascii value will be created into a bucket that gets generated at the bottom. Password might be placed into an arraylist
The amount of pegs that form the shape of the pyramid should scale with the amount of buckets. If not, then the balls wont have the chance to hit all the buckets, so longer passwords will have bigger pyramids, but during programming we will use smaller passwords and comeback later

Create a program that calculates the balls new value based on the bucket it falls in an places it into an arraylist that then gets printed onto a file

Create a program that turns every new value that was printed into its “new” ascii character. 
Characters are stored with less bits so converting each new value into an ascii character saves space. However, not every number created has an ascii value. We need to create new characters for numbers that are generated that don't have an ascii character. If we can't make a new character than we will just stored it as it is and program our decryption program to read both ascii characters and numbers 

Organization:

Have each ball have 3 Identifiers: File Location Value(Array), Ascii Value, Password Array Value(empty until assigned when bucket is touched);

 Have a program that writes those 3 values into a file. Then once every word has been written with its 3 identifiers, the program should sort the file using the file location checksum from 1 to 100 (if there's 100 words) then deletes the file location checksum and leaves the Ascii value and password array value.
Need to implement sorting algorithm (Bubble sort, Quick Sort, Insertion sort)
Doing should reduce ram usage, but increase encryption time 
 
Compression:

Write a program that uses standard zip file compression to shrink the file size down.
Our encryption algorithm doesnt make big files super small like SHA256, but still makes it unreadable and irreversible, so we should implement a built in file compressor for the user. Since they are using pwndaHash already theyll need to program to decrypt it so the uncompression will be done by us aswell
Decryption:
 
Have a program that uncompresses the file and feeds it to the next program

Have a program that reads a file that was encrypted through PwndaHash. It should ask the user’s password, then read the file. It will read the ascii value and then subtract it by the value of the character at the location of the password array assigned to the word in the file. Then print the original value into a new file
This should be a single threaded process so timing isn't an issue and file array location is not needed only ascii value and password array location

Password/Private Key:
Since letting the user choose a password is insecure due to brute forcing we will allow the user to have 2 options: Choose their own password or Generate a password for them to store carefully like they would any other private key.

Create a program that allows the user to choose to generate a password for themselves and the generated password gets saved to a file for the user to save
We can allow the user to choose the generated password length as well. Longer password will be harder to brute force but may take more time to encrypt depending on ball speed
 Make a program that prompts the user when starting Pwnda hash to use a personal password or a password file.
 If personal password is chosen then the user is prompted to type their password
If password file is chosen then the user is prompted to select the files location and another program should read the file and load the password into PwndaHash to use


Application:

Figure out how to turn our java project into an executable file that someone can just click and run. 
Preferably the app should not have to create its own directory inside the user's computer, but the app should be usable by simply downloading the exe without installing it into the computer. 
The app should access and print files using directory pathways
Create a program that allows the user to click and choose directory pathways to select files to encrypt, decrypt, and choose for password files.
This should be similar to how you choose directory pathways when downloading something online or selecting a file to submit for a class



Front End:

Merge Peg program with Buckets program, add collisions to your peg program and make everything come together. Make balls faster and find out how to add gravity or velocity to the balls

Work on User Interface where the user is asked to enter a password while it's encrypted on the bottom. The program will operate on the right.









Back End:




















Not every ball will reach the bucket at the same rate, some balls will fall slower. As the reader reads the file each word will be placed into an array. Each array location will have a value inside of it. We should have a program that goes down the array after the file reader has created it and spawns a ball with its Ascii value and its array location. At the bottom, as the ball hits the bucket another program will add a number to the ascii value and then according to its array location a new array will be created and the new value will be placed in the array at the respective location. Another program will take the final array with the new values and print it into a new file. We do not want to use a lot of ram so we have to solve timing issues. We have to try to make the program Asymmetric in a way that no matter the ball's falling rate, if the last word of a file touches the bottom before a word in the middle, the program can still calculate a new value for the word and write it to a file in the right location. If we don't, we will use too much ram.
